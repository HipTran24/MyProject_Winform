// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyProject.DAL;

#nullable disable

namespace MyProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251005145614_InitAll")]
    partial class InitAll
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyProject.DAL.Models.AppUsers", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AdminID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaGV")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaSV")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.HasIndex("MaGV");

                    b.HasIndex("MaSV")
                        .IsUnique()
                        .HasFilter("[MaSV] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "sv001",
                            MaSV = "SV001",
                            Password = "123456",
                            Role = "Student"
                        },
                        new
                        {
                            Username = "sv002",
                            MaSV = "SV002",
                            Password = "123456",
                            Role = "Student"
                        },
                        new
                        {
                            Username = "gv001",
                            MaGV = "GV001",
                            Password = "123456",
                            Role = "Lecturer"
                        },
                        new
                        {
                            Username = "gv002",
                            MaGV = "GV002",
                            Password = "123456",
                            Role = "Lecturer"
                        },
                        new
                        {
                            Username = "admin01",
                            AdminID = "AD001",
                            Password = "admin123",
                            Role = "Admin"
                        },
                        new
                        {
                            Username = "admin02",
                            AdminID = "AD002",
                            Password = "admin456",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.Calendars", b =>
                {
                    b.Property<string>("MaMH")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaGV")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly>("Ngay")
                        .HasColumnType("date");

                    b.Property<string>("PhongHoc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TietHoc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaMH", "MaGV");

                    b.HasIndex("MaGV");

                    b.ToTable("LichGiangDay");

                    b.HasData(
                        new
                        {
                            MaMH = "MH001",
                            MaGV = "GV001",
                            Ngay = new DateOnly(2025, 10, 1),
                            PhongHoc = "A101",
                            TietHoc = "1-3"
                        },
                        new
                        {
                            MaMH = "MH002",
                            MaGV = "GV001",
                            Ngay = new DateOnly(2025, 10, 2),
                            PhongHoc = "A102",
                            TietHoc = "4-6"
                        },
                        new
                        {
                            MaMH = "MH003",
                            MaGV = "GV002",
                            Ngay = new DateOnly(2025, 10, 3),
                            PhongHoc = "B201",
                            TietHoc = "7-9"
                        },
                        new
                        {
                            MaMH = "MH004",
                            MaGV = "GV002",
                            Ngay = new DateOnly(2025, 10, 4),
                            PhongHoc = "B202",
                            TietHoc = "1-3"
                        },
                        new
                        {
                            MaMH = "MH005",
                            MaGV = "GV004",
                            Ngay = new DateOnly(2025, 10, 5),
                            PhongHoc = "C301",
                            TietHoc = "4-6"
                        },
                        new
                        {
                            MaMH = "MH006",
                            MaGV = "GV004",
                            Ngay = new DateOnly(2025, 10, 6),
                            PhongHoc = "D401",
                            TietHoc = "7-9"
                        },
                        new
                        {
                            MaMH = "MH007",
                            MaGV = "GV005",
                            Ngay = new DateOnly(2025, 10, 7),
                            PhongHoc = "E501",
                            TietHoc = "1-3"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.ClassRoom", b =>
                {
                    b.Property<string>("MaLop")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KhoaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaGV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SoLuongSV")
                        .HasColumnType("int");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLop");

                    b.HasIndex("MaKhoa");

                    b.ToTable("LopHoc");

                    b.HasData(
                        new
                        {
                            MaLop = "LOP001",
                            KhoaHoc = "2021-2025",
                            MaGV = "GV001",
                            MaKhoa = "KH001",
                            SoLuongSV = 0,
                            TenLop = "CNTT1"
                        },
                        new
                        {
                            MaLop = "LOP002",
                            KhoaHoc = "2021-2025",
                            MaGV = "GV002",
                            MaKhoa = "KH001",
                            SoLuongSV = 0,
                            TenLop = "CNTT2"
                        },
                        new
                        {
                            MaLop = "LOP003",
                            KhoaHoc = "2021-2025",
                            MaGV = "GV003",
                            MaKhoa = "KH002",
                            SoLuongSV = 0,
                            TenLop = "QTKD1"
                        },
                        new
                        {
                            MaLop = "LOP004",
                            KhoaHoc = "2021-2025",
                            MaGV = "GV004",
                            MaKhoa = "KH002",
                            SoLuongSV = 0,
                            TenLop = "QTKD2"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.Faculty", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmailKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhongCongTac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SoLuongLop")
                        .HasColumnType("bigint");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruongKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoa");

                    b.HasData(
                        new
                        {
                            MaKhoa = "KH001",
                            EmailKhoa = "cntt@hutech.edu.vn",
                            PhongCongTac = "Phòng A101",
                            SoLuongLop = 25L,
                            TenKhoa = "Công nghệ Thông tin",
                            TruongKhoa = "Nguyễn Văn An"
                        },
                        new
                        {
                            MaKhoa = "KH002",
                            EmailKhoa = "kinhte@hutech.edu.vn",
                            PhongCongTac = "Phòng B201",
                            SoLuongLop = 30L,
                            TenKhoa = "Kinh tế",
                            TruongKhoa = "Trần Thị Bình"
                        },
                        new
                        {
                            MaKhoa = "KH003",
                            EmailKhoa = "cokhi@hutech.edu.vn",
                            PhongCongTac = "Phòng C301",
                            SoLuongLop = 20L,
                            TenKhoa = "Cơ khí",
                            TruongKhoa = "Lê Văn Cường"
                        },
                        new
                        {
                            MaKhoa = "KH004",
                            EmailKhoa = "dientu@hutech.edu.vn",
                            PhongCongTac = "Phòng D401",
                            SoLuongLop = 15L,
                            TenKhoa = "Điện - Điện tử",
                            TruongKhoa = "Phạm Thị Dung"
                        },
                        new
                        {
                            MaKhoa = "KH005",
                            EmailKhoa = "qtkd@hutech.edu.vn",
                            PhongCongTac = "Phòng E501",
                            SoLuongLop = 18L,
                            TenKhoa = "Quản trị Kinh doanh",
                            TruongKhoa = "Hoàng Văn Minh"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.Lecturers", b =>
                {
                    b.Property<string>("MaGV")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaGV");

                    b.HasIndex("MaKhoa");

                    b.ToTable("GiangVien");

                    b.HasData(
                        new
                        {
                            MaGV = "GV001",
                            Email = "an.nguyen@hutech.edu.vn",
                            HoTen = "Nguyễn Văn An",
                            MaKhoa = "KH001",
                            SDT = "0912345678"
                        },
                        new
                        {
                            MaGV = "GV002",
                            Email = "binh.tran@hutech.edu.vn",
                            HoTen = "Trần Thị Bình",
                            MaKhoa = "KH002",
                            SDT = "0987654321"
                        },
                        new
                        {
                            MaGV = "GV003",
                            Email = "cuong.le@hutech.edu.vn",
                            HoTen = "Lê Văn Cường",
                            MaKhoa = "KH001",
                            SDT = "0901234567"
                        },
                        new
                        {
                            MaGV = "GV004",
                            Email = "dung.pham@hutech.edu.vn",
                            HoTen = "Phạm Thị Dung",
                            MaKhoa = "KH003",
                            SDT = "0934567890"
                        },
                        new
                        {
                            MaGV = "GV005",
                            Email = "minh.hoang@hutech.edu.vn",
                            HoTen = "Hoàng Văn Minh",
                            MaKhoa = "KH002",
                            SDT = "0978889999"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.Notify", b =>
                {
                    b.Property<string>("MaTB")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AnhURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaTB");

                    b.HasIndex("Username");

                    b.ToTable("ThongBao");

                    b.HasData(
                        new
                        {
                            MaTB = "TB001",
                            NgayDang = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiDung = "Toàn thể giảng viên họp vào thứ Hai, 9h tại hội trường.",
                            TieuDe = "Thông báo họp",
                            Username = "admin01"
                        },
                        new
                        {
                            MaTB = "TB002",
                            AnhURL = "/images/guide.png",
                            NgayDang = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiDung = "Sinh viên đăng ký học phần trước ngày 15/10.",
                            TieuDe = "Đăng ký học phần",
                            Username = "admin02"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.Score", b =>
                {
                    b.Property<string>("MaSV")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaMH")
                        .HasColumnType("nvarchar(20)");

                    b.Property<float>("DiemCK")
                        .HasColumnType("real");

                    b.Property<float>("DiemGK")
                        .HasColumnType("real");

                    b.Property<float>("DiemTrungBinh")
                        .HasColumnType("real");

                    b.Property<string>("HocKy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSV", "MaMH");

                    b.HasIndex("MaMH");

                    b.ToTable("Diem");

                    b.HasData(
                        new
                        {
                            MaSV = "SV001",
                            MaMH = "MH001",
                            DiemCK = 8f,
                            DiemGK = 7f,
                            DiemTrungBinh = 7.5f,
                            HocKy = "HK1A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV002",
                            MaMH = "MH002",
                            DiemCK = 7f,
                            DiemGK = 6f,
                            DiemTrungBinh = 6.5f,
                            HocKy = "HK1A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV003",
                            MaMH = "MH003",
                            DiemCK = 8.5f,
                            DiemGK = 8f,
                            DiemTrungBinh = 8.25f,
                            HocKy = "HK1A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV004",
                            MaMH = "MH001",
                            DiemCK = 9.5f,
                            DiemGK = 9f,
                            DiemTrungBinh = 9.25f,
                            HocKy = "HK1A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV005",
                            MaMH = "MH002",
                            DiemCK = 6f,
                            DiemGK = 5.5f,
                            DiemTrungBinh = 5.75f,
                            HocKy = "HK1A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV006",
                            MaMH = "MH001",
                            DiemCK = 7f,
                            DiemGK = 6.5f,
                            DiemTrungBinh = 6.75f,
                            HocKy = "HK1B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV007",
                            MaMH = "MH003",
                            DiemCK = 8f,
                            DiemGK = 7.5f,
                            DiemTrungBinh = 7.75f,
                            HocKy = "HK1B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV008",
                            MaMH = "MH002",
                            DiemCK = 9f,
                            DiemGK = 8.5f,
                            DiemTrungBinh = 8.75f,
                            HocKy = "HK1B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV009",
                            MaMH = "MH001",
                            DiemCK = 9.5f,
                            DiemGK = 9f,
                            DiemTrungBinh = 9.25f,
                            HocKy = "HK1B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV010",
                            MaMH = "MH003",
                            DiemCK = 6f,
                            DiemGK = 5f,
                            DiemTrungBinh = 5.5f,
                            HocKy = "HK1B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV001",
                            MaMH = "MH002",
                            DiemCK = 7f,
                            DiemGK = 6f,
                            DiemTrungBinh = 6.5f,
                            HocKy = "HK2A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV002",
                            MaMH = "MH003",
                            DiemCK = 7.5f,
                            DiemGK = 7f,
                            DiemTrungBinh = 7.25f,
                            HocKy = "HK2A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV003",
                            MaMH = "MH001",
                            DiemCK = 8.5f,
                            DiemGK = 8f,
                            DiemTrungBinh = 8.25f,
                            HocKy = "HK2A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV004",
                            MaMH = "MH002",
                            DiemCK = 6f,
                            DiemGK = 5.5f,
                            DiemTrungBinh = 5.75f,
                            HocKy = "HK2A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV005",
                            MaMH = "MH003",
                            DiemCK = 9.5f,
                            DiemGK = 9f,
                            DiemTrungBinh = 9.25f,
                            HocKy = "HK2A-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV006",
                            MaMH = "MH002",
                            DiemCK = 8f,
                            DiemGK = 7.5f,
                            DiemTrungBinh = 7.75f,
                            HocKy = "HK2B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV007",
                            MaMH = "MH001",
                            DiemCK = 8.5f,
                            DiemGK = 8f,
                            DiemTrungBinh = 8.25f,
                            HocKy = "HK2B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV008",
                            MaMH = "MH003",
                            DiemCK = 7f,
                            DiemGK = 6.5f,
                            DiemTrungBinh = 6.75f,
                            HocKy = "HK2B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV009",
                            MaMH = "MH002",
                            DiemCK = 9.5f,
                            DiemGK = 9f,
                            DiemTrungBinh = 9.25f,
                            HocKy = "HK2B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV010",
                            MaMH = "MH001",
                            DiemCK = 6f,
                            DiemGK = 5f,
                            DiemTrungBinh = 5.5f,
                            HocKy = "HK2B-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV001",
                            MaMH = "MH003",
                            DiemCK = 8f,
                            DiemGK = 7f,
                            DiemTrungBinh = 7.5f,
                            HocKy = "HK3-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV002",
                            MaMH = "MH001",
                            DiemCK = 7f,
                            DiemGK = 6f,
                            DiemTrungBinh = 6.5f,
                            HocKy = "HK3-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV003",
                            MaMH = "MH002",
                            DiemCK = 8.5f,
                            DiemGK = 8f,
                            DiemTrungBinh = 8.25f,
                            HocKy = "HK3-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV004",
                            MaMH = "MH003",
                            DiemCK = 9.5f,
                            DiemGK = 9f,
                            DiemTrungBinh = 9.25f,
                            HocKy = "HK3-2025-2026"
                        },
                        new
                        {
                            MaSV = "SV005",
                            MaMH = "MH001",
                            DiemCK = 6f,
                            DiemGK = 5.5f,
                            DiemTrungBinh = 5.75f,
                            HocKy = "HK3-2025-2026"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.SoftwareInfo", b =>
                {
                    b.Property<int>("MaPM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPM"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPM")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaPM");

                    b.ToTable("ThongtinPM");

                    b.HasData(
                        new
                        {
                            MaPM = 1,
                            MoTa = "Phần mềm được phát triển nhằm hỗ trợ quản lý toàn diện thông tin sinh viên, giảng viên, lớp học và kết quả học tập. Hệ thống cho phép admin quản lý dữ liệu trung tâm, giảng viên có thể nhập điểm và cập nhật lịch giảng dạy, sinh viên có thể tra cứu thông tin cá nhân, lịch học, điểm số cũng như nhận các thông báo mới nhất từ nhà trường. Phần mềm được xây dựng dựa trên nền tảng Entity Framework Core, hỗ trợ kết nối cơ sở dữ liệu SQL Server, giao diện thân thiện dễ sử dụng, phân quyền rõ ràng giữa admin, giảng viên và sinh viên. Mục tiêu chính là giảm tải công việc quản lý thủ công, tăng tính chính xác của dữ liệu và nâng cao trải nghiệm cho người dùng.",
                            TenPM = "Phần mềm Quản lý Sinh viên"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.Students", b =>
                {
                    b.Property<string>("MaSV")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSV");

                    b.HasIndex("MaLop");

                    b.ToTable("SinhVien");

                    b.HasData(
                        new
                        {
                            MaSV = "SV001",
                            DiaChi = "TP.HCM",
                            Email = "a@gmail.com",
                            GioiTinh = "Nam",
                            HoTen = "Nguyễn Văn A",
                            MaLop = "LOP001",
                            NgaySinh = new DateTime(2003, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0901234567"
                        },
                        new
                        {
                            MaSV = "SV002",
                            DiaChi = "Hà Nội",
                            Email = "b@gmail.com",
                            GioiTinh = "Nữ",
                            HoTen = "Trần Thị B",
                            MaLop = "LOP001",
                            NgaySinh = new DateTime(2004, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0912345678"
                        },
                        new
                        {
                            MaSV = "SV003",
                            DiaChi = "Đà Nẵng",
                            Email = "c@gmail.com",
                            GioiTinh = "Nam",
                            HoTen = "Lê Văn C",
                            MaLop = "LOP002",
                            NgaySinh = new DateTime(2002, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0923456789"
                        },
                        new
                        {
                            MaSV = "SV004",
                            DiaChi = "Cần Thơ",
                            Email = "d@gmail.com",
                            GioiTinh = "Nữ",
                            HoTen = "Phạm Thị D",
                            MaLop = "LOP002",
                            NgaySinh = new DateTime(2003, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0934567890"
                        },
                        new
                        {
                            MaSV = "SV005",
                            DiaChi = "Hải Phòng",
                            Email = "e@gmail.com",
                            GioiTinh = "Nam",
                            HoTen = "Hoàng Văn E",
                            MaLop = "LOP003",
                            NgaySinh = new DateTime(2001, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0945678901"
                        },
                        new
                        {
                            MaSV = "SV006",
                            DiaChi = "Huế",
                            Email = "f@gmail.com",
                            GioiTinh = "Nữ",
                            HoTen = "Đỗ Thị F",
                            MaLop = "LOP003",
                            NgaySinh = new DateTime(2004, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0956789012"
                        },
                        new
                        {
                            MaSV = "SV007",
                            DiaChi = "Bình Dương",
                            Email = "g@gmail.com",
                            GioiTinh = "Nam",
                            HoTen = "Ngô Văn G",
                            MaLop = "LOP004",
                            NgaySinh = new DateTime(2002, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0967890123"
                        },
                        new
                        {
                            MaSV = "SV008",
                            DiaChi = "Nha Trang",
                            Email = "h@gmail.com",
                            GioiTinh = "Nữ",
                            HoTen = "Võ Thị H",
                            MaLop = "LOP004",
                            NgaySinh = new DateTime(2003, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0978901234"
                        },
                        new
                        {
                            MaSV = "SV009",
                            DiaChi = "Quảng Ninh",
                            Email = "i@gmail.com",
                            GioiTinh = "Nam",
                            HoTen = "Bùi Văn I",
                            MaLop = "LOP001",
                            NgaySinh = new DateTime(2001, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0989012345"
                        },
                        new
                        {
                            MaSV = "SV010",
                            DiaChi = "Quảng Ninh",
                            Email = "i@gmail.com",
                            GioiTinh = "Nam",
                            HoTen = "Bùi Văn I",
                            MaLop = "LOP001",
                            NgaySinh = new DateTime(2001, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0989012345"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.Subjects", b =>
                {
                    b.Property<string>("MaMH")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoTiet")
                        .HasColumnType("int");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenMH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMH");

                    b.HasIndex("MaKhoa");

                    b.ToTable("MonHoc");

                    b.HasData(
                        new
                        {
                            MaMH = "MH001",
                            MaKhoa = "KH001",
                            NgayBatDau = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoTiet = 45,
                            SoTinChi = 3,
                            TenMH = "Lập trình C#"
                        },
                        new
                        {
                            MaMH = "MH002",
                            MaKhoa = "KH001",
                            NgayBatDau = new DateTime(2025, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoTiet = 45,
                            SoTinChi = 3,
                            TenMH = "Cơ sở dữ liệu"
                        },
                        new
                        {
                            MaMH = "MH003",
                            MaKhoa = "KH002",
                            NgayBatDau = new DateTime(2025, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoTiet = 30,
                            SoTinChi = 2,
                            TenMH = "Kinh tế vi mô"
                        },
                        new
                        {
                            MaMH = "MH004",
                            MaKhoa = "KH002",
                            NgayBatDau = new DateTime(2025, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoTiet = 30,
                            SoTinChi = 2,
                            TenMH = "Nguyên lý kế toán"
                        },
                        new
                        {
                            MaMH = "MH005",
                            MaKhoa = "KH003",
                            NgayBatDau = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoTiet = 45,
                            SoTinChi = 3,
                            TenMH = "Vẽ kỹ thuật"
                        },
                        new
                        {
                            MaMH = "MH006",
                            MaKhoa = "KH004",
                            NgayBatDau = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoTiet = 45,
                            SoTinChi = 3,
                            TenMH = "Điện tử cơ bản"
                        },
                        new
                        {
                            MaMH = "MH007",
                            MaKhoa = "KH005",
                            NgayBatDau = new DateTime(2025, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoTiet = 30,
                            SoTinChi = 2,
                            TenMH = "Quản trị học"
                        });
                });

            modelBuilder.Entity("MyProject.DAL.Models.AppUsers", b =>
                {
                    b.HasOne("MyProject.DAL.Models.Lecturers", "lecturers")
                        .WithMany("users")
                        .HasForeignKey("MaGV")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyProject.DAL.Models.Students", "students")
                        .WithOne("users")
                        .HasForeignKey("MyProject.DAL.Models.AppUsers", "MaSV")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("lecturers");

                    b.Navigation("students");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Calendars", b =>
                {
                    b.HasOne("MyProject.DAL.Models.Lecturers", "GiangVien")
                        .WithMany("LichGiangDay")
                        .HasForeignKey("MaGV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.DAL.Models.Subjects", "MonHoc")
                        .WithMany("LichGiangDay")
                        .HasForeignKey("MaMH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("MyProject.DAL.Models.ClassRoom", b =>
                {
                    b.HasOne("MyProject.DAL.Models.Faculty", "faculty")
                        .WithMany("classrooms")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("faculty");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Lecturers", b =>
                {
                    b.HasOne("MyProject.DAL.Models.Faculty", "faculty")
                        .WithMany("lecturers")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("faculty");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Notify", b =>
                {
                    b.HasOne("MyProject.DAL.Models.AppUsers", "Admin")
                        .WithMany("Notifies")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Score", b =>
                {
                    b.HasOne("MyProject.DAL.Models.Subjects", "subjects")
                        .WithMany("Scores")
                        .HasForeignKey("MaMH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.DAL.Models.Students", "students")
                        .WithMany("Scores")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("students");

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Students", b =>
                {
                    b.HasOne("MyProject.DAL.Models.ClassRoom", "classrooms")
                        .WithMany("Students")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("classrooms");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Subjects", b =>
                {
                    b.HasOne("MyProject.DAL.Models.Faculty", "faculty")
                        .WithMany("subjects")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("faculty");
                });

            modelBuilder.Entity("MyProject.DAL.Models.AppUsers", b =>
                {
                    b.Navigation("Notifies");
                });

            modelBuilder.Entity("MyProject.DAL.Models.ClassRoom", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Faculty", b =>
                {
                    b.Navigation("classrooms");

                    b.Navigation("lecturers");

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Lecturers", b =>
                {
                    b.Navigation("LichGiangDay");

                    b.Navigation("users");
                });

            modelBuilder.Entity("MyProject.DAL.Models.Students", b =>
                {
                    b.Navigation("Scores");

                    b.Navigation("users")
                        .IsRequired();
                });

            modelBuilder.Entity("MyProject.DAL.Models.Subjects", b =>
                {
                    b.Navigation("LichGiangDay");

                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
